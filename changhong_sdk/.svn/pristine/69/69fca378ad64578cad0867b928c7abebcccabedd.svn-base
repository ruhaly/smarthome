package com.changhong.sdk.contentprovider;

import java.util.HashMap;
import java.util.Map;

import android.net.Uri;
import android.provider.BaseColumns;

/**
 * [共享数据库常量定义]<BR>
 * [功能详细描述]
 * @author b
 * @version [RCS Client V100R001C03, 2014-2-20] 
 */
public class ChangHong
{
    /**
     * AUTHORITY
     */
    public static final String AUTHORITY = "com.changhong.sdk";
    
    /**
     * segment
     */
    public static String segment = "/";
    
    /**
     * prefix
     */
    private static String prefix = "content:".concat(segment.concat(segment));
    
    /**
     * 
     * 底座
     * [功能详细描述]
     * @author hanliangru
     * @version [智慧社区-终端底座, 2014年3月4日]
     */
    public static class Foundation implements BaseColumns
    {
        /**
         * 表名
         */
        public static final String TABLE_NAME_ATOM = "ATOMBUSINESS";
        
        /**
         * URI
         */
        public static final String URI_ATOM = prefix + AUTHORITY + segment
                + TABLE_NAME_ATOM;
        
        //                + segment
        //                + ChangHongContentProvider.ATOMBUSINESS;
        
        /**
         * CONTENT_URI
         */
        public static final Uri CONTENT_URI_ATOM = Uri.parse(URI_ATOM);
        
        //apk名字
        public static final String APKNAME = "apkName";
        
        //包名
        public static final String PACKAGENAME = "packageName";
        
        //apk主界面全路径
        public static final String MAINACTIVITYPATH = "mainActivityPath";
        
        //后台传的id
        public static final String APKID = "apkId";
        
        //原子业务编码
        public static final String BUSINESSCODE = "businessCode";
        
        //业务类型名字
        public static final String BUSINESSNAME = "businessName";
        
        //apk大小
        public static final String SIZE = "size";
        
        //原子业务类型
        public static final String BUSINESSTYPE = "businessType";
        
        //权限
        //0:已购买
        //1:未购买
        //2:免费使用
        public static final String ISAUTHORITY = "isAuthority";
        
        //序列号
        public static final String SERIALNUMBER = "serialNumber";
        
        //安装包地址
        public static final String SOURCEURL = "sourceUrl";
        
        //所属SP
        public static final String SPID = "spId";
        
        //最新版本号
        public static final String VERSIONNO = "versionNo";
        
        //安装状态 未安装0 已安装1 已卸载2
        public static final String INSTALLSTATE = "installState";
        
        //图标如果是服务器的就下载，如果是预装的直接加上 可能为int跟string类型 
        public static final String ICON = "icon";
        
        /**
         *原子业务 列
         * ATOMBUSINESS_COLUMNS
         */
        
        public static final String[] ATOMBUSINESS_COLUMNS = new String[] {
                APKNAME, PACKAGENAME, MAINACTIVITYPATH, APKID, BUSINESSCODE,
                BUSINESSNAME, SIZE, BUSINESSTYPE, ISAUTHORITY, SERIALNUMBER,
                SOURCEURL, SPID, VERSIONNO, INSTALLSTATE, ICON };
        
    }
    
    /**
     * [商品数据]<BR>
     * [功能详细描述]
     * @author b
     * @version [RCS Client V100R001C03, 2014-2-20] 
     */
    public static class Shopping implements BaseColumns
    {
        /**
         * 表名
         */
        public static final String TABLE_NAME = "SHOPPING";
        
        /**
         * URI
         */
        public static final String URI = prefix + AUTHORITY + segment
                + TABLE_NAME;
        
        /**
         * CONTENT_URI
         */
        public static final Uri CONTENT_URI = Uri.parse(URI);
        
        /**
         * 商品图片地址
         */
        public static final String PICURL = "picURL";
        
        /**
         * 商场地址
         */
        public static final String ADDRESS = "address";
        
        /**
         * 商品库存
         */
        public static final String STOCK = "stock";
        
        /**
         * 商品描述
         */
        public static final String DESC = "desc";
        
        /**
         * 商品实际价格
         */
        public static final String ACTUALPRICE = "actualPrice";
        
        /**
         * 商品名称
         */
        public static final String NAME = "name";
        
        /**
         * 商品ID
         */
        public static final String GOODSID = "id";
        
        /**
         *  所属SPID
         */
        public static final String SPID = "spId";
        
        /**
         * PHOTO_COLUMNS
         */
        
        public static final String[] SHOPPING_COLUMNS = new String[] { SPID,
                GOODSID, NAME, ACTUALPRICE, STOCK, ADDRESS, PICURL, DESC };
        
    }
    
    /**
     * SNS的好友
     * @author wanghonghong
     *
     */
    public static class Friend implements BaseColumns
    {
        /**
         * 表名
         */
        public static final String TABLE_NAME = "FRIEND";
        
        /**
         * URI
         */
        public static final String URI = prefix + AUTHORITY + segment
                + TABLE_NAME;
        
        /**
         * CONTENT_URI
         */
        public static final Uri CONTENT_URI = Uri.parse(URI);
        
        /**
         * 好友名字
         */
        public static final String FRIENDNAME = "friendName";
        
        /**
         * 好友ID
         */
        public static final String FRIENDID = "friendId";
        
        /**
         * 好友头像地址
         */
        public static final String FRIENDPHOTOPATH = "friendPhotoPath";
        
        /**
         * 好友生日
         */
        public static final String FRIENDBIRTH = "friendBirth";
        
        /**
         * 好友性别
         */
        public static final String FRIENDSEX = "friendSex";
        
        /**
         * 好友家庭地址
         */
        public static final String FRIENDADDRESS = "friendAddress";
        
        /**
         * Friend_COLUMNS
         */
        
        public static final String[] FRIEND_COLUMNS = new String[] { FRIENDID,
                FRIENDNAME, FRIENDPHOTOPATH, FRIENDBIRTH, FRIENDSEX,
                FRIENDADDRESS };
    }
    
    /**
     * [简要描述]:<br/>
     * [详细描述]:<br/>
     * 初始化ContentProvider中需要的projectionMaps
     *
     * @param tableName String
     * @param columns String[]
     * @param projectionMaps Map<String, HashMap<String, String>>
     * @exception
     */
    public static final void initializeColumns(String tableName,
            String[] columns,
            Map<String, HashMap<String, String>> projectionMaps)
    {
        HashMap<String, String> projectionMap = new HashMap<String, String>();
        
        int lenght = columns.length;
        for (int i = 0; i < lenght; i++)
        {
            
            projectionMap.put(columns[i], columns[i]);
            
        }
        
        projectionMaps.put(tableName, projectionMap);
        
    }
}
