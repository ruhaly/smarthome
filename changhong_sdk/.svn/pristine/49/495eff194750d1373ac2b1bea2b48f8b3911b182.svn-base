package com.changhong.sdk.activity;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import android.annotation.SuppressLint;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.KeyEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.WindowManager;
import android.widget.EditText;
import android.widget.PopupWindow;
import android.widget.Toast;

import com.changhong.sdk.R;
import com.changhong.sdk.baseapi.ActivityStack;
import com.changhong.sdk.baseapi.AppLog;
import com.changhong.sdk.baseapi.CHResource;
import com.changhong.sdk.baseapi.CHUtils;
import com.changhong.sdk.baseapi.StringUtils;
import com.changhong.sdk.baseapi.SuperMsgWhat;
import com.jeremyfeinstein.slidingmenu.lib.SlidingMenu;

public abstract class SuperActivity extends DialogActivity implements
        View.OnClickListener, SuperMsgWhat
{
    /*
     * (non-Javadoc)
     * 
     * @see android.app.Activity#onRestart()
     */
    @Override
    protected void onRestart()
    {
        
        AppLog.out(MY_TAG, "onRestart", AppLog.LEVEL_INFO);
        super.onRestart();
    }
    
    static final String ACCOUNT_SPLITER = "Q";
    
    public PopupWindow menuPopupWindow;
    
    private static final String MY_TAG = "SuperActivity";
    
    public static String TAG;
    
    public SuperActivity()
    {
    }
    
    /**
     * 初始化数据.
     */
    public abstract void initData();
    
    /**
     * 
     * 初始化界面布局.
     * @param paramBundle
     */
    public abstract void initLayout(Bundle paramBundle);
    
    /**
     * 初始化界面布局 .
     * @param paramBundle
     */
    public void onCreate(Bundle paramBundle)
    {
        super.onCreate(paramBundle);
        // 全屏
        getWindow().requestFeature(Window.FEATURE_NO_TITLE);
        // getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
        // WindowManager.LayoutParams.FLAG_FULLSCREEN);
        setBehindContentView(R.layout.menu_frame);
        setSlideMenu(SlidingMenu.TOUCHMODE_NONE);
        initData();
        initLayout(paramBundle);
        TAG = this.getClass().getName();
        ActivityStack.getIns().pushActivity(this);
    }
    
    /**
     * 
     * 设置滑动模式.
     * @param touchMode
     */
    public void setSlideMenu(int touchMode)
    {
        SlidingMenu sm = getSlidingMenu();
        if (sm.getTouchModeAbove() == touchMode)
        {
            return;
        }
        sm.setShadowWidthRes(R.dimen.shadow_width);
        sm.setShadowDrawable(R.drawable.shadow);
        sm.setBehindOffsetRes(R.dimen.slidingmenu_offset);
        sm.setFadeDegree(0.2f);
        sm.setTouchModeAbove(touchMode);
    }
    
    /**
     * 
     * 后台运行
     * @param appName TODO
     */
    private void sendBackGroundNotify(String appName)
    {
        //        Intent intent = null;
        //        try
        //        {
        //            intent = new Intent(getApplicationContext(),
        //                    Class.forName(this.getClass().getName()));
        //        }
        //        catch (ClassNotFoundException e)
        //        {
        //            intent = null;
        //        }
        //        if (null == intent)
        //        {
        //            return;
        //        }
        //        
        //        intent.setFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
        //        showNotification(null,
        //                null,
        //                intent,
        //                getString(R.string.app_running),
        //                ID_BACKGROUND,
        //                getString(R.string.app_running));
    }
    
    /**
     * 清除数据.
     */
    public abstract void clearData();
    
    public void finish()
    {
        ActivityStack.getIns().popupActivity(this.getClass().getName());
        super.finish();
    }
    
    public void showToast(final String str)
    {
        runOnUiThread(new Runnable()
        {
            @Override
            public void run()
            {
                Toast.makeText(getBaseContext(), str, Toast.LENGTH_SHORT)
                        .show();
            }
        });
    }
    
    public void handleHttpResponseCode(int code)
    {
        switch (code)
        {
        }
    }
    
    public boolean moveTaskToBack(boolean paramBoolean)
    {
        if (paramBoolean)
            sendBackGroundNotify("");
        return super.moveTaskToBack(paramBoolean);
        
    }
    
    protected void onDestroy()
    {
        clearData();
        super.onDestroy();
    }
    
    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event)
    {
        return super.onKeyDown(keyCode, event);
    }
    
    protected void onResume()
    {
        clearBackGroundNotification();
        super.onResume();
    }
    
    protected void onUserLeaveHint()
    {
        if (!CHUtils.isTopApp(getBaseContext()))
            sendBackGroundNotify("");
        super.onUserLeaveHint();
    }
    
    /**
     * 模拟事件
     * 
     * @param event
     */
    public void imitateEvent()
    {
        Intent intent = new Intent(CHResource.ACTION_BACKGROUND);
        intent.putExtra("nonRoot", true);
        sendBroadcast(intent);
    }
    
    /*
     * (non-Javadoc)
     * 
     * @see android.view.View.OnClickListener#onClick(android.view.View)
     */
    @Override
    public void onClick(View v)
    {
        
    }
    
    /*
     * (non-Javadoc)
     * 
     * @see
     * android.app.Activity#onConfigurationChanged(android.content.res.Configuration
     * )
     */
    @Override
    public void onConfigurationChanged(Configuration newConfig)
    {
        super.onConfigurationChanged(newConfig);
        
    }
    
    /**
     * 
     * 全屏
     */
    public void fullScreen()
    {
        WindowManager.LayoutParams attrs = getParent().getWindow()
                .getAttributes();
        attrs.flags |= WindowManager.LayoutParams.FLAG_FULLSCREEN;
        getWindow().setAttributes(attrs);
        getWindow().addFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);
    }
    
    /**
     * 
     * 取消全屏
     */
    public void cancelFullScreen()
    {
        WindowManager.LayoutParams attrs = getParent().getWindow()
                .getAttributes();
        attrs.flags &= (~WindowManager.LayoutParams.FLAG_FULLSCREEN);
        getWindow().setAttributes(attrs);
        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);
    }
    
    public void showProcessDialog(DialogInterface.OnDismissListener dismiss)
    {
        showProgressDialog("", getString(R.string.loading), true, dismiss);
    }
    
    public String parseXML(String xmlPath)
    {
        StringBuffer sb = new StringBuffer();
        
        ClassLoader cl = SuperActivity.class.getClassLoader();
        InputStream stream = cl.getResourceAsStream(xmlPath);
        int length = 0;
        byte[] b = new byte[1024];
        try
        {
            while ((length = stream.read(b)) != -1)
            {
                sb.append(new String(b, 0, length));
            }
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
        
        return sb.toString();
        
    }
    
    /**
     * 
     * 是否带有动画效果
     * @param intent
     * @param isAnimation
     */
    public void startActivity(Intent intent, boolean isAnimation)
    {
        startActivity(intent);
        // if (isAnimation)
        // overridePendingTransition(R.anim.push_left_out, R.anim.push_left_in);
    }
    
    /**
     * mHandler
     */
    public MewwHandler mHandler = new MewwHandler();
    
    @SuppressLint("HandlerLeak")
    public class MewwHandler extends Handler
    {
        /*
         * (non-Javadoc) (覆盖方法) 方法名称： handleMessage 作者： ruhaly 方法描述：
         * 
         * @see android.os.Handler#handleMessage(android.os.Message)
         */
        @Override
        public void handleMessage(Message msg)
        {
            handleMsg(msg);
        }
    }
    
    /**
     * 
     * 消息处理
     * @param msg
     */
    public void handleMsg(Message msg)
    {
        switch (msg.what)
        {
            case CONNECT_ERROR_MSGWHAT:
            {
                showToast(getString(R.string.error_net));
                break;
            }
            case DATA_FORMAT_ERROR_MSGWHAT:
            {
                showToast(getString(R.string.date_format_error));
                break;
            }
            default:
                break;
        }
        dismissDialog();
        dismissProgress();
    }
    
    /**
     * 
     * 校验当前界面下面的子所有EditView是否为空
     * @param view
     * @return
     */
    public boolean checkEditTextIsEmpty()
    {
        List<View> list = getAllChildViews();
        for (View view : list)
        {
            if (view instanceof EditText && ((EditText) view).isEnabled())
            {
                if (StringUtils.isEmpty(((EditText) view).getText().toString()))
                {
                    showToast(((EditText) view).getHint().toString());
                    return true;
                }
            }
        }
        
        return false;
    }
    
    /**
     * 
     * decorView是window中的最顶层view，可以从window中获取到decorView
     * @return
     */
    public List<View> getAllChildViews()
    {
        View view = getWindow().getDecorView();
        return getAllChildViews(view);
    }
    
    /**
     * 
     * 获取当前界面所有的子控件
     * @param view
     * @return
     */
    private List<View> getAllChildViews(View view)
    {
        List<View> allchildren = new ArrayList<View>();
        if (view instanceof ViewGroup && view.getVisibility() == View.VISIBLE)
        {
            ViewGroup vp = (ViewGroup) view;
            for (int i = 0; i < vp.getChildCount(); i++)
            {
                View viewchild = vp.getChildAt(i);
                allchildren.add(viewchild);
                allchildren.addAll(getAllChildViews(viewchild));
            }
        }
        return allchildren;
    }
}