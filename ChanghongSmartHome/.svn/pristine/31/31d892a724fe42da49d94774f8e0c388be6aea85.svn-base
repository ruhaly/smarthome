package com.changhong.smarthome.phone.foundation.activity;

import java.util.ArrayList;
import java.util.List;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.changhong.sdk.baseapi.Constant;
import com.changhong.sdk.fragment.SuperFragment;
import com.changhong.smarthome.phone.R;
import com.changhong.smarthome.phone.foundation.fragment.InstalledFragment;
import com.changhong.smarthome.phone.foundation.fragment.NoInstalledFragment;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;

public class AppManagerActivity extends BaseActivity
{
    
    @ViewInject(R.id.viewPager)
    private ViewPager viewPager;
    
    private Adapter adapter;
    
    @ViewInject(R.id.btn_noinstall)
    private TextView btn_noinstall;
    
    @ViewInject(R.id.btn_installed)
    private TextView btn_installed;
    
    @ViewInject(R.id.tabFrame)
    private LinearLayout tabFrame;
    
    public MyReceiver receiver;
    
    class MyReceiver extends BroadcastReceiver
    {
        
        @Override
        public void onReceive(Context context, Intent intent)
        {
            if (intent.getAction().equals(Constant.UPDATE_PLUGIN_VIEW))
            {
                updateView(intent);
            }
        }
        
    }
    
    /**
     * 
     * 更新fragment插件列表
     * [功能详细描述]
     * @param intent
     */
    public void updateView(Intent intent)
    {
        for (int i = 0; i < adapter.getCount(); i++)
        {
            adapter.getItem(i).updateView(intent);
        }
    }
    
    @Override
    public void initData()
    {
        receiver = new MyReceiver();
        IntentFilter filter = new IntentFilter();
        filter.addAction(Constant.UPDATE_PLUGIN_VIEW);
        registerReceiver(receiver, filter);
    }
    
    @Override
    protected void onDestroy()
    {
        super.onDestroy();
        if (null != receiver)
        {
            unregisterReceiver(receiver);
            receiver = null;
        }
        
    }
    
    @Override
    public void initLayout(Bundle paramBundle)
    {
        setContentView(R.layout.app_manager_parent_layout);
        ViewUtils.inject(this);
        initAdapter();
        
    }
    
    public void initAdapter()
    {
        if (null == adapter)
        {
            adapter = new Adapter(getSupportFragmentManager());
            viewPager.setAdapter(adapter);
        }
        else
        {
            adapter.notifyDataSetChanged();
        }
    }
    
    @OnClick(R.id.btn_noinstall)
    public void btnNoinstallClick(View view)
    {
        changeVpItem(0);
    }
    
    @OnClick(R.id.btn_installed)
    public void btnInstalledClick(View view)
    {
        changeVpItem(1);
    }
    
    public void changeVpItem(int index)
    {
        
        if (null != viewPager)
        {
            viewPager.setCurrentItem(index);
        }
        if (index == 0)
        {
            tabFrame.setBackgroundResource(R.drawable.tab_viewpager_0);
            btn_noinstall.setTextColor(getResources().getColor(R.color.rose_red));
            btn_installed.setTextColor(getResources().getColor(R.color.gray_5f5f5f));
        }
        else
        {
            btn_noinstall.setTextColor(getResources().getColor(R.color.gray_5f5f5f));
            btn_installed.setTextColor(getResources().getColor(R.color.rose_red));
            tabFrame.setBackgroundResource(R.drawable.tab_viewpager_1);
        }
    }
    
    @OnClick(R.id.img_back)
    public void imgBackClick(View view)
    {
        finish();
    }
    
    @Override
    public void clearData()
    {
        
    }
    
    class Adapter extends FragmentPagerAdapter
    {
        List<SuperFragment> list = new ArrayList<SuperFragment>();
        
        public Adapter(FragmentManager fm)
        {
            super(fm);
            list.add(new NoInstalledFragment());
            list.add(new InstalledFragment());
            
        }
        
        @Override
        public SuperFragment getItem(int arg0)
        {
            return list.get(arg0);
        }
        
        @Override
        public int getCount()
        {
            return list.size();
        }
        
        @Override
        public void destroyItem(ViewGroup container, int position, Object object)
        {
        }
        
        @Override
        public void destroyItem(View container, int position, Object object)
        {
        }
        
    }
    
    @Override
    protected void onResume()
    {
        super.onResume();
    }
}
