package com.changhong.smarthome.phone.sns.activity;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.os.Message;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.AbsListView;
import android.widget.AbsListView.OnScrollListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.PopupWindow;
import android.widget.PopupWindow.OnDismissListener;
import android.widget.TextView;
import android.widget.Toast;

import com.changhong.sdk.activity.SuperActivity;
import com.changhong.sdk.logic.SuperLogic;
import com.changhong.sdk.widget.MCloudProgressDialog;
import com.changhong.sdk.widget.PullRefreshListView;
import com.changhong.sdk.widget.PullRefreshListView.NewScrollerListener;
import com.changhong.sdk.widget.PullRefreshListView.OnRefreshListener;
import com.changhong.smarthome.phone.R;
import com.changhong.smarthome.phone.sns.Constant;
import com.changhong.smarthome.phone.sns.adapter.GroupBuyAdapter;
import com.changhong.smarthome.phone.sns.adapter.GroupBuyMyAdapter;
import com.changhong.smarthome.phone.sns.bean.GroupBuyBean;
import com.changhong.smarthome.phone.sns.bean.GroupBuyingMyVO;
import com.changhong.smarthome.phone.sns.bean.Pager;
import com.changhong.smarthome.phone.sns.logic.IntShareLogic;
import com.lidroid.xutils.HttpUtils;

/**
 * 晒生活/交换空间列表界面<功能详细描述>
 * 团购主界面
 * @author wanghonghong
 * @version [版本号, 2014-1-26]
 * @see [相关类/方法]
 * @since [产品/模块版本]
 */
public class GroupBuyListActivity extends SuperActivity implements
        OnItemClickListener, OnRefreshListener, OnItemLongClickListener

{
    
    private PullRefreshListView listView;
    
    private PullRefreshListView myListView;
    
    private PopupWindow popupWindow;
    
    private LinearLayout allLy;
    
    private boolean isAll = true;
    
    //    private LinearLayout mySwapLy;
    
    private TextView title;
    
    private TextView all;
    
    private TextView showTextView;
    
    private TextView popShowTextView;
    
    private TextView pubBtn;
    
    private GroupBuyAdapter adapter;
    
    private GroupBuyMyAdapter mySharingAdapter;
    
    private List<GroupBuyBean> shareBeans = new ArrayList<GroupBuyBean>();
    
    private List<GroupBuyBean> myShareBeans = new ArrayList<GroupBuyBean>();
    
    private GroupBuyingMyVO myshareVO;
    
    private HttpUtils httpUtils;
    
    private IntShareLogic snsLogic;
    
    private MCloudProgressDialog progressDialog;
    
    /**
     * 一页请求的个数
     */
    private int pageSize = 20;
    
    /**
     * 当前请求的是第几页(真正数据从1开始)
     */
    private int curPage = 1;
    
    private int myCurPage = 1;
    
    /**
     * 标记加载更多
     */
    private boolean isMore = false;
    
    /**
     * 标记是否有加载更多请求
     */
    private boolean isLoadingMore = false;
    
    /**
     * 标记是否有更多
     */
    private boolean hasMore = true;
    
    /**
     * 标记是否有更多
     */
    private boolean myHasMore = true;
    
    private int totalNum;
    
    private int myTotalNum;
    
    /**
     * 晒生活/交换空间
     */
    private String subThemeType = "";
    
    /**
     * 删除的是当前list的第几个item
     */
    private int deletePos;
    
    private Pager pager = new Pager();
    
    private String community = "yhx";
    
    /**
     * lisView滑动加载监听
     * @return
     */
    public NewScrollerListener createScroller()
    {
        NewScrollerListener scroller = new NewScrollerListener()
        {
            private boolean isLoadMoreFile = false;
            
            @Override
            public void newScrollChanged(AbsListView view, int scrollState)
            {
                if ((scrollState == OnScrollListener.SCROLL_STATE_IDLE || scrollState == OnScrollListener.SCROLL_STATE_FLING)
                        && isLoadMoreFile)
                {
                    
                    startToLoadMore();
                }
            }
            
            @Override
            public void newScroll(AbsListView view, int firstVisibleItem,
                    int visibleItemCount, int totalItemCount)
            {
                isLoadMoreFile = (firstVisibleItem + visibleItemCount == totalItemCount) ? true
                        : false;
            }
        };
        return scroller;
    }
    
    /**
     * 我的分享lisView滑动加载监听
     * @return
     */
    public NewScrollerListener createMyScroller()
    {
        NewScrollerListener scroller = new NewScrollerListener()
        {
            private boolean isLoadMoreFile = false;
            
            @Override
            public void newScrollChanged(AbsListView view, int scrollState)
            {
                if ((scrollState == OnScrollListener.SCROLL_STATE_IDLE || scrollState == OnScrollListener.SCROLL_STATE_FLING)
                        && isLoadMoreFile)
                {
                    
                    startToLoadMyMore();
                }
            }
            
            @Override
            public void newScroll(AbsListView view, int firstVisibleItem,
                    int visibleItemCount, int totalItemCount)
            {
                isLoadMoreFile = (firstVisibleItem + visibleItemCount == totalItemCount) ? true
                        : false;
            }
        };
        return scroller;
    }
    
    @Override
    public void onCreate(Bundle savedInstanceState)
    {
        // TODO Auto-generated method stub
        super.onCreate(savedInstanceState);
        setContentView(R.layout.share_list);
        initView();
        Intent intent = getIntent();
        if (null != intent)
        {
            subThemeType = intent.getStringExtra("subThemeType");
        }
        
        title.setText(getResources().getString(R.string.group_buy));
        //        //假数据
        //        initListData();
        //        initMyListData();
        adapter = new GroupBuyAdapter(GroupBuyListActivity.this, shareBeans,
                false);
        snsLogic = IntShareLogic.getInstance();
        if (null == progressDialog)
        {
            progressDialog = new MCloudProgressDialog(
                    GroupBuyListActivity.this,
                    getResources().getString(R.string.loading));
        }
        progressDialog.show();
        curPage = 1;
        isMore = false;
        isLoadingMore = true;
        hasMore = true;
        pager.setPageId(1);
        pager.setPageSize(30);
        getGroupList(community, pager);
        getGroupBuyingMy(community, pager);//获取我的订单
    }
    
    private void initView()
    {
        listView = (PullRefreshListView) findViewById(R.id.share_list);
        myListView = (PullRefreshListView) findViewById(R.id.my_share_list);
        
        title = (TextView) findViewById(R.id.title);
        pubBtn = (TextView) findViewById(R.id.bt_interact_share_publish);
        pubBtn.setVisibility(View.VISIBLE);
        pubBtn.setOnClickListener(this);
        listView.setOnItemClickListener(this);
        listView.setRefreshable(true);
        listView.setOnRefreshListener(this);
        listView.setNewScrollerListener(createScroller());
        
        myListView.setOnItemClickListener(this);
        myListView.setOnItemLongClickListener(this);
        myListView.setRefreshable(true);
        myListView.setOnRefreshListener(this);
        myListView.setNewScrollerListener(createMyScroller());
        all = (TextView) findViewById(R.id.show_all);
        LayoutInflater inflater = LayoutInflater.from(this);
        showTextView = (TextView) findViewById(R.id.show_text);
        View view = inflater.inflate(R.layout.pop_sex, null);
        popupWindow = new PopupWindow(view,
                (int) (getResources().getDimension(R.dimen.pop_sex_width)),
                LayoutParams.WRAP_CONTENT, false);
        // 需要设置一下此参数，点击外边可消失 
        
        popupWindow.setBackgroundDrawable(new BitmapDrawable());
        
        //设置点击窗口外边窗口消失 
        
        popupWindow.setOutsideTouchable(true);
        popupWindow.setOnDismissListener(new OnDismissListener()
        {
            
            @Override
            public void onDismiss()
            {
                // TODO Auto-generated method stub
                all.setBackgroundResource(R.drawable.more_btn);
            }
        });
        
        // 设置此参数获得焦点，否则无法点击 
        
        popupWindow.setFocusable(true);
        allLy = (LinearLayout) view.findViewById(R.id.all);
        popShowTextView = (TextView) view.findViewById(R.id.pop_show_text);
        allLy.setOnClickListener(this);
        //        mySwapLy.setOnClickListener(this);
        all.setOnClickListener(this);
    }
    
    private void initListData()
    {
        for (int i = 0; i < 10; i++)
        {
            GroupBuyBean bean = new GroupBuyBean();
            bean.setActivityTime("2.21-2.24");
            bean.setContactTel("123123213");
            bean.setContent("羽绒服额、、、");
            bean.setFollowPeopleNum("12");
            bean.setPromotionalPrice("12");
            bean.setOrignalPrice("20");
            bean.setLaunchBusiness("家乐福");
            switch (i)
            {
                case 1:
                    bean.setOver(false);
                    bean.setMy(false);
                    bean.setHot(true);
                    break;
                case 3:
                    bean.setOver(false);
                    bean.setMy(false);
                    bean.setHot(true);
                    break;
                case 4:
                    bean.setOver(false);
                    bean.setMy(true);
                    bean.setHot(true);
                    break;
                case 8:
                    bean.setOver(false);
                    bean.setMy(true);
                    bean.setHot(false);
                    break;
                case 9:
                    bean.setOver(true);
                    bean.setMy(false);
                    bean.setHot(true);
                    break;
                default:
                    bean.setOver(false);
                    bean.setMy(false);
                    bean.setHot(false);
                    break;
            }
            
            shareBeans.add(bean);
        }
        
    }
    
    private void initMyListData()
    {
        for (int i = 0; i < 5; i++)
        {
            GroupBuyBean bean = new GroupBuyBean();
            bean.setActivityTime("2.21-2.24");
            bean.setContactTel("123123213");
            bean.setContent("羽绒服额、、、");
            bean.setMy(true);
            bean.setFollowPeopleNum("12");
            bean.setPromotionalPrice("12");
            bean.setOrignalPrice("20");
            bean.setLaunchBusiness("家乐福");
            switch (i)
            {
                case 1:
                    bean.setOver(false);
                    
                    bean.setHot(true);
                    break;
                case 3:
                    bean.setOver(false);
                    
                    bean.setHot(true);
                    break;
                case 4:
                    bean.setOver(false);
                    
                    bean.setHot(true);
                    break;
                
                default:
                    bean.setOver(false);
                    
                    bean.setHot(false);
                    break;
            }
            
            myShareBeans.add(bean);
        }
        
    }
    
    /**
     * 
     * @param communityCode
     * @param pager
     */
    private void getGroupList(String communityCode, Pager pager)
    {
        httpUtils = new HttpUtils();
        snsLogic.setData(mHandler);
        snsLogic.requestgroupBuyingList(communityCode, pager, httpUtils);
    }
    
    private void getGroupBuyingMy(String communityCode, Pager pager)
    {
        snsLogic.requestGroupBuyingMy(communityCode, pager);
    }
    
    /**
     * 刷新
     */
    private void refresh()
    {
        
        isMore = false;
        isLoadingMore = true;
        
        if (listView.getVisibility() == View.VISIBLE)
        {
            curPage = 1;
            hasMore = true;
            //            getDynamicList(String.valueOf(Constant.PUBLIC_RANGE),
            //                    subThemeType,
            //                    curPage,
            //                    pageSize,
            //                    -1);
        }
        else
        {
            myCurPage = 1;
            myHasMore = true;
            //            getDynamicList("", "", myCurPage, pageSize, -1);
        }
        
    }
    
    /**
     * 加载更多
     */
    protected void startToLoadMore()
    {
        if (hasMore)
        {
            if (!isLoadingMore)
            {
                
                listView.showLoading();
                curPage = curPage + 1;
                isLoadingMore = true;
                isMore = true;
                Log.d(TAG, "startToLoadMore--->");
                //                getDynamicList(String.valueOf(Constant.PUBLIC_RANGE),
                //                        subThemeType,
                //                        curPage,
                //                        pageSize,
                //                        -1);
            }
        }
    }
    
    /**
     * 加载更多
     */
    protected void startToLoadMyMore()
    {
        if (myHasMore)
        {
            if (!isLoadingMore)
            {
                
                myListView.showLoading();
                myCurPage = myCurPage + 1;
                isLoadingMore = true;
                isMore = true;
                Log.d(TAG, "startToLoadMyMore--->");
                //                getDynamicList("", "", myCurPage, pageSize, -1);
            }
        }
    }
    
    @Override
    public void initData()
    {
    }
    
    @Override
    public void initLayout(Bundle paramBundle)
    {
        // TODO Auto-generated method stub
        
    }
    
    @Override
    public void clearData()
    {
        // TODO Auto-generated method stub
        
    }
    
    @Override
    public void onClick(View v)
    {
        // TODO Auto-generated method stub
        super.onClick(v);
        switch (v.getId())
        {
            case R.id.bt_interact_share_publish:
                Intent intent = new Intent();
                intent.setClass(GroupBuyListActivity.this,
                        PubEditActivity.class);
                intent.putExtra("subThemeType", subThemeType);
                startActivity(intent);
                break;
            case R.id.all:
                if (null != popupWindow)
                {
                    popupWindow.dismiss();
                    all.setBackgroundResource(R.drawable.more_btn);
                }
                if (isAll)
                {
                    Log.i(TAG, "-----------------001");
                    showTextView.setText(getResources().getString(R.string.my_swap));
                    popShowTextView.setText(getResources().getString(R.string.all));
                    listView.setVisibility(View.GONE);
                    myListView.setVisibility(View.VISIBLE);
                    
                    if (mySharingAdapter.getCount() > 0)
                    {
                        
                    }
                    else
                    {
                        if (null == progressDialog)
                        {
                            progressDialog = new MCloudProgressDialog(
                                    GroupBuyListActivity.this,
                                    getResources().getString(R.string.loading));
                        }
                        progressDialog.show();
                        //                        getDynamicList("", "", myCurPage, pageSize, -1);
                    }
                    isAll = false;
                }
                else
                {
                    popShowTextView.setText(getResources().getString(R.string.my_swap));
                    showTextView.setText(getResources().getString(R.string.all));
                    listView.setVisibility(View.VISIBLE);
                    myListView.setVisibility(View.GONE);
                    isAll = true;
                }
                
                break;
            //            case R.id.my_swap:
            //                if (null != popupWindow)
            //                {
            //                    popupWindow.dismiss();
            //                }
            //                
            //                break;
            case R.id.show_all:
                all.setBackgroundResource(R.drawable.more_btn_top);
                popupWindow.showAsDropDown(all, 0, 38);
                
                break;
            default:
                break;
        }
        
    }
    
    @Override
    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3)
    {
        // TODO Auto-generated method stub
        Intent intent = new Intent();
        intent.setClass(GroupBuyListActivity.this, GroupBuyDetailActivity.class);
        if (isAll)
        {
            intent.putExtra("isMy", shareBeans.get(arg2 - 1).isMy());
        }
        else
        {
            intent.putExtra("isMy", myShareBeans.get(arg2 - 1).isMy());
        }
        
        //        intent.putExtra("whichInfo", whichInfo);
        //        intent.putExtra("themeId", shareBean.getId());
        //        intent.putExtra("codeId", shareBean.getThemeCodeId());
        //        intent.putExtra("replyCount", String.valueOf(shareBean.getReplyCount()));
        //        intent.putExtra("nickName", shareBean.getNickName());
        //        intent.putExtra("userIcon", shareBean.getCreatorPicUrl());
        //        intent.putExtra("postType", shareBean.getPostType());
        //        intent.putExtra("userId", shareBean.getCreatorId());
        //        intent.putExtra("rangeType", shareBean.getThemeType());
        startActivity(intent);
        
    }
    
    @Override
    public void onRefresh()
    {
        // TODO Auto-generated method stub
        refresh();
    }
    
    @Override
    protected void onResume()
    {
        // TODO Auto-generated method stub
        super.onResume();
        if (Constant.isNeedToRefresh)
        {
            //            refresh();
        }
    }
    
    @Override
    public void handleMsg(Message msg)
    {
        // TODO Auto-generated method stub
        super.handleMsg(msg);
        if (null != progressDialog)
        {
            progressDialog.dismiss();
            progressDialog = null;
        }
        
        switch (msg.what)
        {
            case Constant.GET_GROUPBUYINGLIST_SUCCESS:
                if (listView.getVisibility() == View.VISIBLE)
                {
                    listView.onRefreshComplete();
                    listView.showLoadFinish();
                }
                else
                {
                    myListView.onRefreshComplete();
                    myListView.showLoadFinish();
                }
                
                isLoadingMore = false;
                GroupBuyBean shareBean = (GroupBuyBean) msg.obj;
                List<GroupBuyBean> sBeans = shareBean.getGroupBuyBeans();
                if (listView.getVisibility() == View.VISIBLE)
                {
                    totalNum = shareBean.getTotalNum();
                    Log.d(TAG, "totalNum---->" + totalNum);
                    if (!isMore)
                    {
                        shareBeans.clear();
                    }
                    shareBeans.addAll(sBeans);
                    if (shareBeans.size() < totalNum)
                    {
                        hasMore = true;
                    }
                    else
                    {
                        hasMore = false;
                    }
                    adapter.notifyDataSetChanged();
                }
                else
                {
                    myTotalNum = shareBean.getTotalNum();
                    Log.d(TAG, "myTotalNum---->" + myTotalNum);
                    if (!isMore)
                    {
                        myShareBeans.clear();
                    }
                    myShareBeans.addAll(sBeans);
                    if (myShareBeans.size() < myTotalNum)
                    {
                        myHasMore = true;
                    }
                    else
                    {
                        myHasMore = false;
                    }
                    mySharingAdapter.notifyDataSetChanged();
                }
                
                break;
            case Constant.GET_GROUPBUYINGLIST_FAILED:
                //                if (msg.arg1 != -1)
                //                {
                //                    return;
                //                }
                if (listView.getVisibility() == View.VISIBLE)
                {
                    listView.onRefreshComplete();
                    listView.showLoadFinish();
                }
                else
                {
                    myListView.onRefreshComplete();
                    myListView.showLoadFinish();
                }
                
                isLoadingMore = false;
                Toast.makeText(GroupBuyListActivity.this,
                        getResources().getString(R.string.get_group_buy_failed),
                        Toast.LENGTH_SHORT)
                        .show();
                break;
            case Constant.GET_GROUPBUYINGMY_SUCCESS:
                isLoadingMore = false;
                myshareVO = (GroupBuyingMyVO) msg.obj;
                mySharingAdapter = new GroupBuyMyAdapter(GroupBuyListActivity.this,
                        myshareVO, true);
                
                listView.setAdapter(adapter);
                myListView.setAdapter(mySharingAdapter);
                mySharingAdapter.notifyDataSetChanged();
                break;
            case Constant.GET_GROUPBUYINGMY_FAILED:
                
                break;
            case Constant.DELETE_SUCCESS:
                Toast.makeText(GroupBuyListActivity.this,
                        getResources().getString(R.string.delete_success),
                        Toast.LENGTH_SHORT).show();
                myShareBeans.remove(deletePos);
//                mySharingAdapter.notifyDataSetChanged();
                break;
            case Constant.DELETE_FAILED:
                Toast.makeText(GroupBuyListActivity.this,
                        getResources().getString(R.string.delete_failed),
                        Toast.LENGTH_SHORT).show();
                break;
            case SuperLogic.CONNECT_ERROR_MSGWHAT:
                if (listView.getVisibility() == View.VISIBLE)
                {
                    listView.onRefreshComplete();
                    listView.showLoadFinish();
                }
                else
                {
                    myListView.onRefreshComplete();
                    myListView.showLoadFinish();
                }
                isLoadingMore = false;
                break;
            default:
                break;
        }
    }
    
    /**
     * 删除请求
     * @param themeOrReplyId
     * @param delType
     */
    private void deleteShare(String themeOrReplyId)
    {
        if (null == progressDialog)
        {
            progressDialog = new MCloudProgressDialog(
                    GroupBuyListActivity.this,
                    getResources().getString(R.string.common_pagetip_deleting));
        }
        progressDialog.show();
        httpUtils = new HttpUtils();
        snsLogic.setData(mHandler);
        snsLogic.requestDelete(themeOrReplyId, Constant.DELETE_SHARE, httpUtils);
    }
    
    @Override
    public boolean onItemLongClick(AdapterView<?> arg0, View arg1, int arg2,
            long arg3)
    {
        deletePos = arg2 - 1;
        
        //        showAlertDialog(0,
        //                getString(R.string.tip),
        //                getString(R.string.delete_tip_share),
        //                null,
        //                new DialogInterface.OnClickListener()
        //                {
        //                    
        //                    @Override
        //                    public void onClick(DialogInterface dialog, int which)
        //                    {
        //                        // TODO Auto-generated method stub
        //                        deleteShare(myShareBeans.get(deletePos).getId());
        //                    }
        //                },
        //                DEFAULT_BTN,
        //                null,
        //                true,
        //                false);
        return false;
    }
    
}
