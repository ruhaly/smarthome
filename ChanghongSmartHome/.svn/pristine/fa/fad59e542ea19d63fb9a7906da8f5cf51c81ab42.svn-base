package com.changhong.smarthome.phone.foundation.activity;

import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Message;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;

import com.changhong.sdk.baseapi.AppLog;
import com.changhong.smarthome.phone.MainActivity;
import com.changhong.smarthome.phone.R;
import com.changhong.smarthome.phone.foundation.bean.Community;
import com.changhong.smarthome.phone.foundation.logic.AddCommunityLogic;
import com.changhong.smarthome.phone.foundation.logic.LoginLogic;
import com.changhong.smarthome.phone.foundation.logic.SelectCommunityLogic;
import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;

public class CommunitySelectActivity extends BaseActivity
{
    @ViewInject(R.id.etSearch)
    private EditText etSearch;
    
    @ViewInject(R.id.btnSearch)
    private Button btnSearch;
    
    @ViewInject(R.id.listView)
    private ListView listView;
    
    private SelectCommunityLogic selectLogic;
    
    private Adapter adapter;
    
    private HttpUtils selectHttpUtil;
    
    private AddCommunityLogic addLogic;
    
    private HttpUtils addHttpUtil;
    
    private String cityName;
    
    private String cityId;
    
    @Override
    public void initData()
    {
        selectLogic = SelectCommunityLogic.getInstance();
    }
    
    @Override
    public void initLayout(Bundle paramBundle)
    {
        setContentView(R.layout.community_select_layout);
        ViewUtils.inject(this);
        cityName = getIntent().getStringExtra("cityName");
        cityId = getIntent().getStringExtra("cityId");
        etSearch.setHint("搜索" + cityName + "小区");
        btnSearch.setOnClickListener(this);
        initAdater();
        requestCommunityList("");
        
    }
    
    @Override
    public void onClick(View v)
    {
        switch (v.getId())
        {
            case R.id.btnSearch:
            {
                String searchName = etSearch.getText().toString();
                if (searchName == null || searchName.isEmpty())
                {
                    requestCommunityList("");
                }
                else
                {
                    requestCommunityList(searchName);
                }
                break;
            }
            default:
            {
                break;
            }
        }
    };
    
    DialogInterface.OnDismissListener dismiss = new DialogInterface.OnDismissListener()
    {
        @Override
        public void onDismiss(DialogInterface dialog)
        {
            selectLogic.stopRequest();
        }
    };
    
    public void requestCommunityList(String communityName)
    {
        showProcessDialog(dismiss);
        selectHttpUtil = new HttpUtils();
        selectLogic.setData(mHandler);
        selectLogic.requestCommunityList(cityId,
                cityName,
                communityName,
                selectHttpUtil);
    }
    
    @Override
    public void handleMsg(Message msg)
    {
        switch (msg.what)
        {
            case MSGWHAT_SELECT_COMMUNITY_SUCCESS:
            {
                AppLog.out("---select--community---",
                        "success",
                        AppLog.LEVEL_DEBUG);
                initAdater();
                break;
            }
            case MSGWHAT_ADD_COMMUNITY_SUCCESS:
            {
                AppLog.out("---add--community---",
                        "success",
                        AppLog.LEVEL_DEBUG);
                Intent intent = new Intent();
                //将数据带回小区管理页面
                CommunitySelectActivity.this.setResult(RESULT_OK, intent);
                finish();
            }
            default:
            {
                break;
            }
        }
        super.handleMsg(msg);
    };
    
    public void initAdater()
    {
        if (null == adapter)
        {
            adapter = new Adapter();
            listView.setAdapter(adapter);
            listView.setOnItemClickListener(new OnItemClickListener()
            {
                
                @Override
                public void onItemClick(AdapterView<?> parent, View view,
                        int position, long id)
                {
                    
                    int typeSrc = getIntent().getIntExtra("typeSrc", 0);
                    //选择小区来源于 小区管理页面
                    if (typeSrc == 1)
                    {
                        addLogic = AddCommunityLogic.getInstance();
                        addHttpUtil = new HttpUtils();
                        addLogic.setData(mHandler);
                        String userId = getUser().getUid();
                        String communityId = selectLogic.list.get(position)
                                .getCommunityId();
                        addLogic.requestAddCommunity(userId,
                                communityId,
                                addHttpUtil);
                    }
                    //选择小区来源于启动界面
                    else
                    {
                        Community c = new Community();
                        c.setName(adapter.getItem(position).getName());
                        c.setCommunityId(adapter.getItem(position)
                                .getCommunityId());
                        c.setId(adapter.getItem(position).getId());
                        c.setSelect(true);
                        LoginLogic.getInstance().curCommunity = c;
                        Intent intent = new Intent(getBaseContext(),
                                MainActivity.class);
                        startActivity(intent);
                    }
                }
            });
        }
        else
        {
            adapter.notifyDataSetChanged();
        }
    }
    
    @Override
    public void clearData()
    {
        selectLogic.clear();
    }
    
    class Adapter extends BaseAdapter
    {
        
        @Override
        public int getCount()
        {
            return selectLogic.list.size();
        }
        
        @Override
        public Community getItem(int position)
        {
            return selectLogic.list.get(position);
        }
        
        @Override
        public long getItemId(int position)
        {
            return position;
        }
        
        @Override
        public View getView(int position, View convertView, ViewGroup parent)
        {
            ViewHolder viewHolder = null;
            if (convertView == null)
            {
                viewHolder = new ViewHolder();
                convertView = LayoutInflater.from(getBaseContext())
                        .inflate(R.layout.community_item_layout, null);
                viewHolder.tvName = (TextView) convertView.findViewById(R.id.tvName);
                viewHolder.tvArear = (TextView) convertView.findViewById(R.id.tvArear);
                viewHolder.tvAddress = (TextView) convertView.findViewById(R.id.tvAddress);
                convertView.setTag(viewHolder);
            }
            else
            {
                viewHolder = (ViewHolder) convertView.getTag();
            }
            viewHolder.tvName.setText(getItem(position).getName());
            viewHolder.tvArear.setText(getItem(position).getArea());
            viewHolder.tvAddress.setText(getItem(position).getAddress());
            return convertView;
            
        }
        
        class ViewHolder
        {
            public TextView tvName;
            
            public TextView tvArear;
            
            public TextView tvAddress;
        }
    }
    
}
