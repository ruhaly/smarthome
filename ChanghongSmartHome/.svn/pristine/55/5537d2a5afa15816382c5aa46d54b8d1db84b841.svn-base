package com.changhong.smarthome.phone.sns.activity;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.os.Message;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.AbsListView;
import android.widget.AbsListView.OnScrollListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.LinearLayout.LayoutParams;
import android.widget.LinearLayout;
import android.widget.PopupWindow;
import android.widget.TextView;
import android.widget.Toast;

import com.changhong.sdk.activity.SuperActivity;
import com.changhong.sdk.logic.SuperLogic;
import com.changhong.sdk.widget.MCloudProgressDialog;
import com.changhong.sdk.widget.PullRefreshListView;
import com.changhong.sdk.widget.PullRefreshListView.NewScrollerListener;
import com.changhong.sdk.widget.PullRefreshListView.OnRefreshListener;
import com.changhong.smarthome.phone.R;
import com.changhong.smarthome.phone.sns.Constant;
import com.changhong.smarthome.phone.sns.adapter.InteractShareAdapter;
import com.changhong.smarthome.phone.sns.bean.ShareBean;
import com.changhong.smarthome.phone.sns.logic.IntShareLogic;
import com.lidroid.xutils.HttpUtils;

/**
 * 晒生活/交换空间列表界面<功能详细描述>
 * 
 * @author wanghonghong
 * @version [版本号, 2014-1-26]
 * @see [相关类/方法]
 * @since [产品/模块版本]
 */
public class ShareListActivity extends SuperActivity implements
        OnItemClickListener, OnRefreshListener

{
    
    private PullRefreshListView listView;
    
    private PopupWindow popupWindow;
    
    private LinearLayout allLy;
    
    private LinearLayout mySwapLy;
    
    private TextView title;
    
    private TextView all;
    
    private TextView pubBtn;
    
    private InteractShareAdapter adapter;
    
    private List<ShareBean> shareBeans = new ArrayList<ShareBean>();
    
    private HttpUtils httpUtils;
    
    private IntShareLogic snsLogic;
    
    private MCloudProgressDialog progressDialog;
    
    /**
     * 一页请求的个数
     */
    private int pageSize = 20;
    
    /**
     * 当前请求的是第几页(真正数据从1开始)
     */
    private int curPage = 1;
    
    /**
     * 标记加载更多
     */
    private boolean isMore = false;
    
    /**
     * 标记是否有加载更多请求
     */
    private boolean isLoadingMore = false;
    
    /**
     * 标记是否有更多
     */
    private boolean hasMore = true;
    
    private int totalNum;
    
    /**
     * 晒生活/交换空间
     */
    private String subThemeType = "";
    
    /**
     * lisView滑动加载监听
     * @return
     */
    public NewScrollerListener createScroller()
    {
        NewScrollerListener scroller = new NewScrollerListener()
        {
            private boolean isLoadMoreFile = false;
            
            @Override
            public void newScrollChanged(AbsListView view, int scrollState)
            {
                if ((scrollState == OnScrollListener.SCROLL_STATE_IDLE || scrollState == OnScrollListener.SCROLL_STATE_FLING)
                        && isLoadMoreFile)
                {
                    
                    startToLoadMore();
                }
            }
            
            @Override
            public void newScroll(AbsListView view, int firstVisibleItem,
                    int visibleItemCount, int totalItemCount)
            {
                isLoadMoreFile = (firstVisibleItem + visibleItemCount == totalItemCount) ? true
                        : false;
            }
        };
        return scroller;
    }
    
    @Override
    public void onCreate(Bundle savedInstanceState)
    {
        // TODO Auto-generated method stub
        super.onCreate(savedInstanceState);
        setContentView(R.layout.share_list);
        initView();
        Intent intent = getIntent();
        if (null != intent)
        {
            subThemeType = intent.getStringExtra("subThemeType");
        }
        if (subThemeType.equals(Constant.DYNAMIC_TYPE_ID_SHOT))
        {
            title.setText(getResources().getString(R.string.sun_life));
        }
        else
        {
            title.setText(getResources().getString(R.string.swap_space));
        }
        adapter = new InteractShareAdapter(ShareListActivity.this, shareBeans);
        listView.setAdapter(adapter);
        snsLogic = IntShareLogic.getInstance();
        if (null == progressDialog)
        {
            progressDialog = new MCloudProgressDialog(ShareListActivity.this,
                    getResources().getString(R.string.loading));
        }
        progressDialog.show();
        curPage = 1;
        
        getDynamicList(String.valueOf(Constant.PUBLIC_RANGE),
                subThemeType,
                curPage,
                pageSize,
                -1);
    }
    
    private void initView()
    {
        listView = (PullRefreshListView) findViewById(R.id.share_list);
        title = (TextView) findViewById(R.id.title);
        pubBtn = (TextView) findViewById(R.id.bt_interact_share_publish);
        pubBtn.setVisibility(View.VISIBLE);
        pubBtn.setOnClickListener(this);
        listView.setOnItemClickListener(this);
        listView.setRefreshable(true);
        listView.setOnRefreshListener(this);
        listView.setNewScrollerListener(createScroller());
        all = (TextView) findViewById(R.id.show_all);
        LayoutInflater inflater = LayoutInflater.from(this);
        
        View view = inflater.inflate(R.layout.pop_sex, null);
        popupWindow = new PopupWindow(view,
                (int) (getResources().getDimension(R.dimen.pop_sex_width)),
                LayoutParams.WRAP_CONTENT, false);
        // 需要设置一下此参数，点击外边可消失 
        
        popupWindow.setBackgroundDrawable(new BitmapDrawable());
        
        //设置点击窗口外边窗口消失 
        
        popupWindow.setOutsideTouchable(true);
        
        // 设置此参数获得焦点，否则无法点击 
        
        popupWindow.setFocusable(true);
        allLy = (LinearLayout) view.findViewById(R.id.all);
        mySwapLy = (LinearLayout) view.findViewById(R.id.my_swap);
        allLy.setOnClickListener(this);
        mySwapLy.setOnClickListener(this);
        all.setOnClickListener(this);
    }
    
    /**
     * 获取动态列表
     * @param userId
     * @param themeType
     * @param pageIndex
     * @param pageSize
     */
    private void getDynamicList(String themeType, String themeSubType,
            int pageIndex, int pageSize, int pos)
    {
        Log.d(TAG, "getDynamicList----start>");
        
        httpUtils = new HttpUtils();
        snsLogic.setData(mHandler);
        snsLogic.requestGetDynamicInfo(pos,
                themeType,
                themeSubType,
                pageIndex,
                pageSize,
                httpUtils);
    }
    
    /**
     * 刷新
     */
    private void refresh()
    {
        curPage = 1;
        isMore = false;
        isLoadingMore = true;
        hasMore = true;
        getDynamicList(String.valueOf(Constant.PRIVATE_RANGE),
                "",
                curPage,
                pageSize,
                -1);
        // 网络不可用时直接返回
        //        if (!isNetworkAvailable())
        //        {
        //            closeDialog(refreshDialog);
        //            epContainer.onRefreshComplete();
        //            return;
        //        }
    }
    
    /**
     * 加载更多
     */
    protected void startToLoadMore()
    {
        if (hasMore)
        {
            if (!isLoadingMore)
            {
                
                listView.showLoading();
                curPage = curPage + 1;
                isLoadingMore = true;
                isMore = true;
                Log.d(TAG, "startToLoadMore--->");
                getDynamicList("", "", curPage, pageSize, -1);
            }
        }
        
        // 处理云端滑动获取更多
        
        // 网络不可用时直接返回
        //        if (!isNetworkAvailable())
        //        {
        //            return;
        //        }
    }
    
    @Override
    public void initData()
    {
        // TODO Auto-generated method stub
        
    }
    
    @Override
    public void initLayout(Bundle paramBundle)
    {
        // TODO Auto-generated method stub
        
    }
    
    @Override
    public void clearData()
    {
        // TODO Auto-generated method stub
        
    }
    
    @Override
    public void onClick(View v)
    {
        // TODO Auto-generated method stub
        super.onClick(v);
        switch (v.getId())
        {
            case R.id.bt_interact_share_publish:
                Intent intent = new Intent();
                intent.setClass(ShareListActivity.this, PubEditActivity.class);
                intent.putExtra("subThemeType", subThemeType);
                startActivity(intent);
                break;
            case R.id.all:
                if (null != popupWindow)
                {
                    popupWindow.dismiss();
                }
                all.setText(getResources().getString(R.string.all));
                break;
            case R.id.my_swap:
                if (null != popupWindow)
                {
                    popupWindow.dismiss();
                }
                all.setText(getResources().getString(R.string.my_swap));
                break;
            case R.id.show_all:
                if (popupWindow.isShowing())
                {
                    popupWindow.dismiss();
                }
                else
                {
                    popupWindow.showAsDropDown(all, 0, 0);
                }
                break;
            default:
                break;
        }
        
    }
    
    @Override
    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3)
    {
        // TODO Auto-generated method stub
        Intent intent = new Intent();
        
        ShareBean shareBean = shareBeans.get(arg2 - 1);
        String whichInfo = shareBean.getThemeCodeId();
        //判断是否是转发动态
        if (shareBean.getPostType().equals(Constant.POSTTYPE_FORWARD))
        {
            intent.setClass(ShareListActivity.this, ShareForwardActivity.class);
        }
        else
        {
            //判断是活动/二手信息/或者其他
            if (whichInfo.equals(Constant.DYNAMIC_TYPE_ID_SECOND))
            {
                intent.setClass(ShareListActivity.this,
                        ShareBusinessActivity.class);
            }
            else if (whichInfo.equals(Constant.DYNAMIC_TYPE_ID_ACTIVITY))
            {
                intent.setClass(ShareListActivity.this,
                        ShareBusinessActivity.class);
            }
            else
            {
                intent.setClass(ShareListActivity.this,
                        ShareOriogionalActivity.class);
            }
        }
        intent.putExtra("whichInfo", whichInfo);
        intent.putExtra("themeId", shareBean.getId());
        intent.putExtra("codeId", shareBean.getThemeCodeId());
        intent.putExtra("replyCount", String.valueOf(shareBean.getReplyCount()));
        intent.putExtra("nickName", shareBean.getNickName());
        intent.putExtra("userIcon", shareBean.getCreatorPicUrl());
        intent.putExtra("postType", shareBean.getPostType());
        intent.putExtra("userId", shareBean.getCreatorId());
        intent.putExtra("rangeType", shareBean.getThemeType());
        startActivity(intent);
        
    }
    
    @Override
    public void onRefresh()
    {
        // TODO Auto-generated method stub
        refresh();
    }
    
    @Override
    public void handleMsg(Message msg)
    {
        // TODO Auto-generated method stub
        super.handleMsg(msg);
        if (null != progressDialog)
        {
            progressDialog.dismiss();
            progressDialog = null;
        }
        if (msg.arg1 != -1)
        {
            return;
        }
        switch (msg.what)
        {
            case Constant.GET_DYNAMIC_INFO_LIST_SUCCESS:
                listView.onRefreshComplete();
                listView.showLoadFinish();
                isLoadingMore = false;
                ShareBean shareBean = (ShareBean) msg.obj;
                List<ShareBean> sBeans = shareBean.getShareBeans();
                totalNum = shareBean.getTotalNum();
                Log.d(TAG, "totalNum---->" + totalNum);
                
                //                if (null == sBeans || sBeans.size() == 0)
                //                {
                //                    hasMore = false;
                //                }
                if (!isMore)
                {
                    shareBeans.clear();
                }
                shareBeans.addAll(sBeans);
                if (shareBeans.size() < totalNum)
                {
                    hasMore = true;
                }
                else
                {
                    hasMore = false;
                }
                adapter.notifyDataSetChanged();
                break;
            case Constant.GET_DYNAMIC_INFO_LIST_FAILED:
                listView.onRefreshComplete();
                listView.showLoadFinish();
                isLoadingMore = false;
                Toast.makeText(ShareListActivity.this,
                        getResources().getString(R.string.req_new_friend_failed),
                        Toast.LENGTH_SHORT)
                        .show();
                break;
            case SuperLogic.CONNECT_ERROR_MSGWHAT:
                listView.onRefreshComplete();
                listView.showLoadFinish();
                isLoadingMore = false;
                break;
            default:
                break;
        }
    }
    
}
