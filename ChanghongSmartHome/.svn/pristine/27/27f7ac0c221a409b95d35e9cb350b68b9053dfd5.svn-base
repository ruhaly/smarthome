package com.changhong.smarthome.phone.store.adapter;

import java.util.List;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.DisplayMetrics;
import android.util.TypedValue;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;

import com.changhong.smarthome.phone.R;
import com.changhong.smarthome.phone.store.activity.OrderDetailActivity;
import com.changhong.smarthome.phone.store.entity.StoreConstant;
import com.changhong.smarthome.phone.store.logic.bean.OrderInfoBean;
import com.changhong.smarthome.phone.store.logic.bean.OrderInfoGroup;
import com.lidroid.xutils.BitmapUtils;
import com.lidroid.xutils.bitmap.BitmapDisplayConfig;
import com.lidroid.xutils.bitmap.core.BitmapSize;

public class OrderManagerHosExpandadapter extends BaseExpandableListAdapter
{
    private Context context;
    
    private BitmapUtils mBitmapUtils;
    
    private BitmapDisplayConfig bigPicDisplayConfig;
    
    private int itemHeight = 186;
    
    private int groupHeight = 76;
    
    private int screenHeight;
    
    private int screenWidth;
    
    private List<OrderInfoGroup> mgroups;
    
    private int selecedIndex = -1;
    
    public OrderManagerHosExpandadapter(Context context,
            List<OrderInfoGroup> groups, BitmapUtils bitmapUtils)
    {
        this.context = context;
        mgroups = groups;
        mBitmapUtils = bitmapUtils;
        DisplayMetrics dm = context.getResources().getDisplayMetrics();
        screenHeight = dm.heightPixels;
        screenWidth = dm.widthPixels;
        bigPicDisplayConfig = new BitmapDisplayConfig();
        BitmapSize bitmapSize = new BitmapSize((screenWidth * 152) / 720,
                (screenHeight * 108) / 1280);
        bigPicDisplayConfig.setBitmapMaxSize(bitmapSize);
        itemHeight = (screenHeight * 186) / 1280;
        
        groupHeight = (screenHeight * 76) / 1280;
    }
    
    public OrderInfoBean getChild(int groupPosition, int childPosition)
    {
        return mgroups.get(groupPosition).sList.get(childPosition);
    }
    
    public long getChildId(int groupPosition, int childPosition)
    {
        return childPosition;
    }
    
    public int getChildrenCount(int groupPosition)
    {
        return mgroups.get(groupPosition).sList.size();
    }
    
    public View getChildView(int groupPosition, int childPosition,
            boolean isLastChild, View convertView, ViewGroup parent)
    {
        ViewHolder holder = null;
        if (convertView == null)
        {
            
            holder = new ViewHolder();
            convertView = View.inflate(context, R.layout.order_item, null);
            holder.subLayout = (RelativeLayout) convertView.findViewById(R.id.order_item_layout);
            android.widget.AbsListView.LayoutParams layoutParams = new android.widget.AbsListView.LayoutParams(
                    LayoutParams.MATCH_PARENT, itemHeight);
            holder.subLayout.setLayoutParams(layoutParams);
            
            holder.imageView = (ImageView) convertView.findViewById(R.id.news_item_icon);
            RelativeLayout.LayoutParams params1 = (android.widget.RelativeLayout.LayoutParams) holder.imageView.getLayoutParams();
            params1.height = (screenHeight * 108) / 1280;
            params1.width = (screenWidth * 152) / 720;
            params1.leftMargin = (screenWidth * 40) / 720;
            params1.rightMargin = (screenWidth * 42) / 720;
            params1.topMargin = (screenWidth * 40) / 720;
            holder.imageView.setLayoutParams(params1);
            
            holder.nameTextView = (TextView) convertView.findViewById(R.id.news_item_name);
            holder.priceTextView = (TextView) convertView.findViewById(R.id.news_item_price);
            holder.timeTextView = (TextView) convertView.findViewById(R.id.news_item_time);
            
            holder.nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
                    (screenWidth * 36) / 720);
            holder.priceTextView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
                    (screenWidth * 28) / 720);
            holder.timeTextView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
                    (screenWidth * 28) / 720);
            convertView.setTag(holder);
            
        }
        else
        {
            holder = (ViewHolder) convertView.getTag();
        }
        
        final OrderInfoBean item = mgroups.get(groupPosition).sList.get(childPosition);
        if (item != null)
        {
            holder.nameTextView.setText(item.getGoodsName());
            String price = String.valueOf(item.getGoodsPrice());
            String quantity = String.valueOf(item.getOrderQuantity());
            String str1 = String.format(context.getResources()
                    .getString(R.string.ordermanager_item_price),
                    price,
                    quantity);
            holder.priceTextView.setText(str1);
            
            String time = item.getOrderTime();
            String str2 = String.format(context.getResources()
                    .getString(R.string.ordermanager_item_time),
                    time);
            holder.timeTextView.setText(str2);
            
            mBitmapUtils.display(holder.imageView,
                    item.getGoodsIcon(),
                    bigPicDisplayConfig,
                    null);
        }
        convertView.setOnClickListener(new View.OnClickListener()
        {
            
            @Override
            public void onClick(View v)
            {
                // TODO Auto-generated method stub
                Intent intent = new Intent(context, OrderDetailActivity.class);
                intent.putExtra(StoreConstant.ORDER_TYPE,
                        StoreConstant.ORDER_SHOW);
                Bundle bundle = new Bundle();
                bundle.putSerializable(StoreConstant.ORDER_DETAIL, item);
                intent.putExtras(bundle);
                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                context.startActivity(intent);
            }
        });
        return convertView;
    }
    
    // group method stub
    
    public OrderInfoGroup getGroup(int groupPosition)
    {
        return mgroups.get(groupPosition);
    }
    
    public int getGroupCount()
    {
        return mgroups.size();
    }
    
    public long getGroupId(int groupPosition)
    {
        return groupPosition;
    }
    
    public View getGroupView(int groupPosition, boolean isExpanded,
            View convertView, ViewGroup parent)
    {
        GroupViewHolder holder = null;
        if (convertView == null)
        {
            holder = new GroupViewHolder();
            
            convertView = View.inflate(context,
                    R.layout.order_manager_hos_group,
                    null);
            
            holder.subLayout = (RelativeLayout) convertView.findViewById(R.id.order_group_layout);
            android.widget.AbsListView.LayoutParams layoutParams = new android.widget.AbsListView.LayoutParams(
                    LayoutParams.MATCH_PARENT, groupHeight);
            holder.subLayout.setLayoutParams(layoutParams);
            
            holder.nameTextView = (TextView) convertView.findViewById(R.id.group_text_id);
            holder.nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
                    (screenWidth * 36) / 720);
            
            holder.imageView = (ImageView) convertView.findViewById(R.id.group_image_id);
            RelativeLayout.LayoutParams params1 = (android.widget.RelativeLayout.LayoutParams) holder.imageView.getLayoutParams();
            params1.height = (screenHeight * 46) / 1280;
            params1.width = (screenWidth * 46) / 720;
            holder.imageView.setLayoutParams(params1);
            
            convertView.setTag(holder);
        }
        else
        {
            holder = (GroupViewHolder) convertView.getTag();
        }
        
        holder.nameTextView.setText(mgroups.get(groupPosition).getDisName());
        
        if (selecedIndex == groupPosition)
        {
            holder.imageView.setBackgroundResource(R.drawable.icon_arrow_selected);
        }
        else
        {
            holder.imageView.setBackgroundResource(R.drawable.icon_arrow_default);
        }
        return convertView;
    }
    
    // View stub to create Group/Children 's View
    
    public boolean hasStableIds()
    {
        return false;
    }
    
    public boolean isChildSelectable(int groupPosition, int childPosition)
    {
        return true;
    }
        
    public void setSelected(int index)
    {
        selecedIndex = index;
    }
    
    final class GroupViewHolder
    {
        private RelativeLayout subLayout;
        
        private ImageView imageView;
        
        private TextView nameTextView;
    }
    
    final class ViewHolder
    {
        
        private RelativeLayout subLayout;
        
        private ImageView imageView;
        
        private TextView nameTextView;
        
        private TextView priceTextView;
        
        private TextView timeTextView;
    }
    
}
