/**
* 
*@Copyright: Copyright (c) 2014  
* @author yang_jun
*@Date:2014-3-28 上午10:02:11 
*@QQ: 756427684 
*/
package com.changhong.smarthome.phone.property.adapter;

import java.util.List;
import java.util.Map;

import android.content.Context;
import android.graphics.Bitmap;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.changhong.smarthome.phone.R;
import com.lidroid.xutils.BitmapUtils;

/**
 *我的积分兑换adapter
 */
public class MyIntegrationAdapter extends BaseAdapter
{
    
    private static final String TAG = "MyIntegrationAdapter";
    
    LayoutInflater mInflater = null;
    
    List<Map<String, Object>> data;
    
    private Context context;
    
    public MyIntegrationAdapter(Context context, List<Map<String, Object>> data)
    {
        this.mInflater = LayoutInflater.from(context);
        this.context = context;
        this.data = data;
        Log.i(TAG, "" + data.size());
    }
    
    @Override
    public int getCount()
    {
        return data.size();
    }
    
    @Override
    public Object getItem(int position)
    {
        // TODO Auto-generated method stub
        return data.get(position);
    }
    
    @Override
    public long getItemId(int position)
    {
        // TODO Auto-generated method stub
        return position;
    }
    
    @Override
    public View getView(int position, View convertView, ViewGroup parent)
    {
        ViewHolder holder = null;
        BitmapUtils bitmapUtilsHead = new BitmapUtils(context);
        bitmapUtilsHead.configDefaultLoadingImage(R.drawable.msg);
        bitmapUtilsHead.configDefaultLoadFailedImage(R.drawable.msg);
        bitmapUtilsHead.configDefaultBitmapConfig(Bitmap.Config.RGB_565);
        if (convertView == null)
        {
            holder = new ViewHolder();
            convertView = mInflater.inflate(R.layout.myintegrationexchangeitem,
                    null);
            holder.goodsImage = (ImageView) convertView.findViewById(R.id.goodsImage);
            holder.goodsName = (TextView) convertView.findViewById(R.id.goodsName);
            holder.needIntegration = (TextView) convertView.findViewById(R.id.needIntegration);
            holder.validityTimeFrom = (TextView) convertView.findViewById(R.id.validityTimeFrom);
            holder.validityTimeTo = (TextView) convertView.findViewById(R.id.validityTimeTo);
            convertView.setTag(holder);
        }
        else
        {
            holder = (ViewHolder) convertView.getTag();
        }
        holder.goodsName.setText(data.get(position).get("goodsName").toString());
        holder.needIntegration.setText(data.get(position).get("needIntegration").toString());
        holder.validityTimeFrom.setText(data.get(position).get("validityTimeFrom").toString());
        holder.validityTimeTo.setText(data.get(position).get("validityTimeTo").toString());
        bitmapUtilsHead.display(holder.goodsImage, data.get(position).get("goodsImage").toString());
        return convertView;
    }
    
    static class ViewHolder
    {
        private ImageView goodsImage;
        
        public TextView goodsName;
        
        public TextView needIntegration;
        
        public TextView validityTimeFrom;
        
        public TextView validityTimeTo;
    }
    
}
